name: Manual Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - dev
  pull_request:
    types: [opened, closed]

jobs:
  manual-job:
    runs-on: ubuntu-latest
    env:
      project: "project2"
    steps:
    - name: Checkout source repository
      uses: actions/checkout@v2
      
    - name: Checkout target repository
      uses: actions/checkout@v2
      with:
        repository: 'ravikumara004/protectbranch'
        token: ${{ secrets.MY_TOKEN }}
        path: 'protectbranch'  # Optional: directory to checkout the repository
        ref: 'feature'  # Specify the branch name here
        #fetch-depth: 0
        
    - name: read all the file and update it on PR Descriptions
      run: |
        #!/bin/bash
        cd protectbranch
        find .template/ -type f -name "*-value.yaml" | while IFS= read -r file; do
        echo "Processing $file"
        filename=$(basename "$file")
        value=${filename%-value.yaml}
        echo "#####-$value-start-#####" >> out.yaml
        echo $value
        cat "$file" >> out.yaml
        echo "#####-$value-end-#####" >> out.yaml
        done

        echo "out put file"
        cat out.yaml

        #update PR Body
        new_description=$(cat out.yaml)
        echo "pr number: ${{ github.event.pull_request.number }}"
        # echo "repo : ${GITHUB_REPOSITORY}"
        # echo $new_description

        content=$(<out.yaml)
        echo "::set-env name=OUT_YAML_CONTENT::$content"

        # echo "Update the pull request description using GitHub API"
        # myt="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"
        # response=$(curl -X PATCH -s -H "Authorization: token $myt" \
        # -H "Accept: application/vnd.github.v3+json" \
        # -d "{\"body\": \"$new_description\"}" \
        # "https://api.github.com/repos/${GITHUB_REPOSITORY}/pulls/${{ github.event.pull_request.number }}")

        echo "response : $response"
        echo "remove file"
        rm -rf out.yaml
    - name: Use the environment variable
      run: |
        echo $OUT_YAML_CONTENT
        echo "pr no : ${{ github.event.number }}"
        
    - name: Update PR description
      uses: peter-evans/update-pr-description@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        pr-number: ${{ github.event.number }}
        description: |
          $OUT_YAML_CONTENT
        
    - name: print pwd and list file
      run: |
        ls 
        pwd
        cp *.yaml /home/runner/work/webapplication/webapplication/protectbranch/
        echo "============================================================"
        echo "PR Body: ${{ github.event.pull_request.body }}"
       

    - name: read pr body and update value file.
      run: |
        #!/bin/bash
        echo $GITHUB_REF
        PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
        DESCRIPTION=$(curl --silent --show-error --location --header "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/$GITHUB_REPOSITORY/pulls/$PR_NUMBER" | jq -r '.body')
        echo "PR_NUMBER :$PR_NUMBER"
        echo "DESCRIPTION: $DESCRIPTION"
        echo $DESCRIPTION
    - name: Configure git
      run: |
        git config --global user.email "ravikj004@gmail.com"
        git config --global user.name "ravikumara004"
  
    - name: Commit and Push changes
      run: |
        #!/bin/bash
        ls
        cd protectbranch

        if [ -n "${{ github.event.pull_request.body }}" ]; then
          ##read the value file from ####
          echo "${{ github.event.pull_request.body }}" > inputvaluesfile.yaml
          appname=artic  
          awk "/#####-$appname-start-#####/{flag=1; next} /#####-$appname-end-#####/{flag=0} flag" inputvaluesfile.yaml > ${{ env.project }}/extracted_content.yaml 
          rm -rf inputvaluesfile.yaml
          ###end ############
        else
            echo "PR description is empty. Skipping..."
            exit 1
        fi
        
        git add .
          # Commit changes if there are any staged changes
        git diff --staged --quiet || git commit -m "Update timestamp"
        #git commit -m "Update timestamp"
        # The branch you want to push the changes to, adjust as necessary
        echo "git pull"
        git config pull.rebase false
        #git pull https://${{ secrets.USERNAME }}:${{ secrets.MY_TOKEN }}@github.com/ravikumara004/protectbranch.git HEAD:feature
  
        git push https://${{ secrets.USERNAME }}:${{ secrets.MY_TOKEN }}@github.com/ravikumara004/protectbranch.git HEAD:feature
  
        #git push origin HEAD:feature
 
